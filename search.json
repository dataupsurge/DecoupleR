[{"path":"https://dataupsurge.github.io/DecoupleR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 DecoupleR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Morgan Durand. Author, maintainer, copyright holder.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Durand M (2025). DecoupleR: Manage application settings via .env .ini files type casting default values. R package version 0.1.0, https://dataupsurge.github.io/DecoupleR/.","code":"@Manual{,   title = {DecoupleR: Manage application settings via .env or .ini files with type casting and default values},   author = {Morgan Durand},   year = {2025},   note = {R package version 0.1.0},   url = {https://dataupsurge.github.io/DecoupleR/}, }"},{"path":"https://dataupsurge.github.io/DecoupleR/index.html","id":"decoupler","dir":"","previous_headings":"","what":"Manage application settings via .env or .ini files with type casting and default values","title":"Manage application settings via .env or .ini files with type casting and default values","text":"Strict separation settings code. DecoupleR attempt port excellent python-decouple library R. stated original author, python-decouple makes easy : store parameters ini .env files; define comprehensive default values; properly convert values correct data type; one configuration module rule instances. DecoupleR general behavior order mimic much possible python-decouple, tested python-decouple unit tests.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/index.html","id":"priority-rules-and-config-files-serach","dir":"","previous_headings":"","what":"Priority rules and config files serach","title":"Manage application settings via .env or .ini files with type casting and default values","text":"DecoupleR always searches Options order: Environment variables; Repository: ini .env file; Default argument passed config. noted environment variables precedence config files order unix consistent.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/index.html","id":"config-file-search","dir":"","previous_headings":"","what":"Config file search","title":"Manage application settings via .env or .ini files with type casting and default values","text":"config files searched , default, working directory, directory provided via path argument. config files, settings.ini .env found directory, search continue parent directories.","code":""},{"path":[]},{"path":"https://dataupsurge.github.io/DecoupleR/index.html","id":"on-the-fly-parameter-evaluation","dir":"","previous_headings":"Example","what":"On-the-fly parameter evaluation","title":"Manage application settings via .env or .ini files with type casting and default values","text":"Parameter value can retrieve anytime invoking DecoupleR::get_var function. config parameter provided, config file search carried function call.","code":"get_var('R_HOME')"},{"path":"https://dataupsurge.github.io/DecoupleR/index.html","id":"preload-the-config-file","dir":"","previous_headings":"Example","what":"Preload the config file","title":"Manage application settings via .env or .ini files with type casting and default values","text":"order avoid recurrent config file search get_var call, config file search can carried via get_config function. list returned, containing parameters config file .","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/index.html","id":"implementated-parser","dir":"","previous_headings":"","what":"Implementated parser","title":"Manage application settings via .env or .ini files with type casting and default values","text":"DecoupleR supports .ini .env files.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/index.html","id":"ini-file","dir":"","previous_headings":"Implementated parser","what":"Ini file","title":"Manage application settings via .env or .ini files with type casting and default values","text":"DecoupleR can read ini files provide simple interpolation. Simply create `settings.ini working directory roots.","code":"[settings]   DEBUG=True   TEMPLATE_DEBUG=%(DEBUG)s   SECRET_KEY=ARANDOMSECRETKEY   DATABASE_URL=mysql://myuser:mypassword@myhost/mydatabase   PERCENTILE=90%%   #COMMENTED=42"},{"path":"https://dataupsurge.github.io/DecoupleR/index.html","id":"env-file","dir":"","previous_headings":"Implementated parser","what":"Env file","title":"Manage application settings via .env or .ini files with type casting and default values","text":"Simply create .env text file repository’s root directory form:","code":"DEBUG=True     TEMPLATE_DEBUG=True     SECRET_KEY=ARANDOMSECRETKEY     DATABASE_URL=mysql://myuser:mypassword@myhost/mydatabase     PERCENTILE=90%     #COMMENTED=42"},{"path":"https://dataupsurge.github.io/DecoupleR/index.html","id":"undefined-parameters","dir":"","previous_headings":"","what":"undefined parameters","title":"Manage application settings via .env or .ini files with type casting and default values","text":"example, configuration parameters except SECRET_KEY = config('SECRET_KEY') default value fallback exist .env file. SECRET_KEY present .env, DecoupleR raise error. fail fast policy helps avoid chasing misbehaviors eventually forget parameter.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/index.html","id":"casting-argument","dir":"","previous_headings":"undefined parameters","what":"Casting argument","title":"Manage application settings via .env or .ini files with type casting and default values","text":"default, values returned DecoupleR strings. easily specify returned type, get_var function accepts cast argument receives callable, used transform string value something else. prefedined transformation also implementated: Integer: int, integer Bolean: bool, boolean, logical Float: float","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/cast_as.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to cast data from keyword of function — cast_as","title":"Helper function to cast data from keyword of function — cast_as","text":"Helper function cast data keyword function","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/cast_as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to cast data from keyword of function — cast_as","text":"","code":"cast_as(variable, cast)"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/cast_as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to cast data from keyword of function — cast_as","text":"variable String casted cast Casting function keyword","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/cast_as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to cast data from keyword of function — cast_as","text":"casted variable","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/find_config_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Config file search — find_config_files","title":"Config file search — find_config_files","text":"Config file search","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/find_config_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Config file search — find_config_files","text":"","code":"find_config_files(path)"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/find_config_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config file search — find_config_files","text":"path directory config file search initialized. Look current root directories finding config file reaching primary root.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/find_config_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Config file search — find_config_files","text":"full path config file found. config file found,  returns `NULL`.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for config files and return variable / value pairs as a list. — get_config","title":"Search for config files and return variable / value pairs as a list. — get_config","text":"DecoupleR currently supports .env files. `get_config` search speficied directory parent `.env` file. file found, empty list returned.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for config files and return variable / value pairs as a list. — get_config","text":"","code":"get_config(path = NULL)"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for config files and return variable / value pairs as a list. — get_config","text":"path path config searched . Parent directories evaluated config file found specified directory. NULL, current directory taken default.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for config files and return variable / value pairs as a list. — get_config","text":"list variables / values config file. config file found, empyt list returned.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search for config files and return variable / value pairs as a list. — get_config","text":"## Env file: Simply create .env text file repository's root directory form:","code":"DEBUG=True TEMPLATE_DEBUG=True SECRET_KEY=ARANDOMSECRETKEY DATABASE_URL=mysql://myuser:mypassword@myhost/mydatabase PERCENTILE=90 #COMMENTED=42"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for config files and return variable / value pairs as a list. — get_config","text":"","code":"config <- get_config() config #> list()"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_config_filename_from_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Return config file path found in a directory — get_config_filename_from_dir","title":"Return config file path found in a directory — get_config_filename_from_dir","text":"Return config file path found directory","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_config_filename_from_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return config file path found in a directory — get_config_filename_from_dir","text":"","code":"get_config_filename_from_dir(path)"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_config_filename_from_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return config file path found in a directory — get_config_filename_from_dir","text":"path directory config files looking .","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_config_filename_from_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return config file path found in a directory — get_config_filename_from_dir","text":"full path config file found. config file found, returns `NULL`.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrive the value of the variable — get_var","title":"Retrive the value of the variable — get_var","text":"Get variable , order priority, environment variable, .env settings.ini, default values. Data type can cast boolean integer.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrive the value of the variable — get_var","text":"","code":"get_var(   config = NULL,   var_name = NULL,   path = NULL,   default = structure(\"UNDEFINED_\", class = \"UNDEFINED_\"),   cast = NULL )"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrive the value of the variable — get_var","text":"config object returned init_config function. NULL, config evaluated path argument. var_name variable interest path path config files searched . NULL,current directory considered default. default default value cast Either function type cast. Currently implemented options `integer`,  `boolean` `float`.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrive the value of the variable — get_var","text":"value associated config variable. type depends cast argument. Default string.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/get_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrive the value of the variable — get_var","text":"","code":"config <- get_config() get_var(config, \"test\", default = \"yes\", cast = \"bool\") #> [1] TRUE"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/is_undefined.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if object if of class _UNDEFINED — is_undefined","title":"Test if object if of class _UNDEFINED — is_undefined","text":"Test object class _UNDEFINED","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/is_undefined.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if object if of class _UNDEFINED — is_undefined","text":"","code":"is_undefined(x)"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/is_undefined.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if object if of class _UNDEFINED — is_undefined","text":"x object.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/is_undefined.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if object if of class _UNDEFINED — is_undefined","text":"boolean","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/load_dot_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Load environment variables from the specified file — load_dot_env","title":"Load environment variables from the specified file — load_dot_env","text":"file parsed, line expected one  following formats:","code":"VARIABLE=value VARIABLE2=\"quoted value\" VARIABLE3='another quoted variable' # Comment line export EXPORTED=\"exported variable\" export EXPORTED2=another"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/load_dot_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load environment variables from the specified file — load_dot_env","text":"","code":"load_dot_env(fpath = \".env\")"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/load_dot_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load environment variables from the specified file — load_dot_env","text":"fpath path `.env` config file","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/load_dot_env.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load environment variables from the specified file — load_dot_env","text":"Load variables defined given file, environment variables. Detailed specification: leading export ignored, keep file      compatible Unix shells. whitespace allowed right      equal sign, , promote compatilibity Unix shells. multi-line variables supported currently.      file strictly parsed line line. Unlike Unix shells, unquoted values      terminated whitespace. Comments start #, without leading      whitespace. mix variable definitions      comments line. Empty lines (containing whitespace ) ignored. suggested keep file form parsed way dotenv bash (shells).","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/load_dot_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load environment variables from the specified file — load_dot_env","text":"","code":"# Load from a file tmp <- tempfile()  cat(\"dotenvexamplefoo=bar\\n\", file = tmp) load_dot_env(tmp) #> $dotenvexamplefoo #> [1] \"bar\" #>   # Clean up unlink(tmp)"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/random_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random string of specified length — random_string","title":"Generate a random string of specified length — random_string","text":"Generate random string specified length","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/random_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random string of specified length — random_string","text":"","code":"random_string(string_length = 6, replace = TRUE)"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/random_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random string of specified length — random_string","text":"string_length Integer, length string generate. replace Bollean, Use replace sampling procedure.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/random_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random string of specified length — random_string","text":"random string.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/remove_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse config file and remove comment lines — remove_comments","title":"Parse config file and remove comment lines — remove_comments","text":"Parse config file remove comment lines","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/remove_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse config file and remove comment lines — remove_comments","text":"","code":"remove_comments(lines)"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/remove_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse config file and remove comment lines — remove_comments","text":"lines list config file lines.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/remove_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse config file and remove comment lines — remove_comments","text":"list config file lines comment lines filtered .","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/remove_empty_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse config file and remove empty lines — remove_empty_lines","title":"Parse config file and remove empty lines — remove_empty_lines","text":"Parse config file remove empty lines","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/remove_empty_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse config file and remove empty lines — remove_empty_lines","text":"","code":"remove_empty_lines(lines)"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/remove_empty_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse config file and remove empty lines — remove_empty_lines","text":"lines list config file lines.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/remove_empty_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse config file and remove empty lines — remove_empty_lines","text":"list config file lines empty lines filtered .","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/to_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert categorical representations of true/false values to a logical — to_logical","title":"Convert categorical representations of true/false values to a logical — to_logical","text":"Allow convertion logical related data actual Boolean","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/to_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert categorical representations of true/false values to a logical — to_logical","text":"","code":"to_logical(x)"},{"path":"https://dataupsurge.github.io/DecoupleR/reference/to_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert categorical representations of true/false values to a logical — to_logical","text":"x vector boolean compatible values.","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/to_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert categorical representations of true/false values to a logical — to_logical","text":"vector boolean","code":""},{"path":"https://dataupsurge.github.io/DecoupleR/reference/to_logical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert categorical representations of true/false values to a logical — to_logical","text":"","code":"to_logical(c(\"yes\", \"no\")) #> [1]  TRUE FALSE"},{"path":"https://dataupsurge.github.io/DecoupleR/news/index.html","id":"decoupler-010","dir":"Changelog","previous_headings":"","what":"DecoupleR 0.1.0","title":"DecoupleR 0.1.0","text":"Initial CRAN submission.","code":""}]
